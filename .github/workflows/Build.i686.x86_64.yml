
name: Build aria2c {i686, x86_64} for {Windows, linux}

on:
  release:
    types: [published]

jobs:
  build-aria2-mingw:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build aria2 Docker image
        run: docker build -t aria2_mingw -f Dockerfile.i686.x86_64.mingw .
      - name: Create a container
        id: ccont
        run: echo ::set-output name=id::$(docker create aria2_mingw /bin/bash)
      - name: Copy built aria2 - aria2c.exe
        run: |
          mkdir -p aria2/i686 aria2/x86_64
          docker cp ${{steps.ccont.outputs.id}}:/i686/aria2c.exe aria2/i686/
          docker cp ${{steps.ccont.outputs.id}}:/x86_64/aria2c.exe aria2/x86_64/
          cd aria2
          zip aria2-i686-win.zip i686/*
          zip aria2-x86_64-win.zip x86_64/*
      - name: rm the container and image
        run: |
          docker rm ${{steps.ccont.outputs.id}}
          docker image rm aria2_mingw
      - name: Build upload url i686
        id: bldurl-i686
        run: echo ::set-output name=url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets?name=aria2-i686-win.zip
      - name: Upload release asset i686
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.bldurl-i686.outputs.url }}
          asset_path: aria2/aria2-i686-win.zip
          asset_name: aria2-i686-win.zip
          asset_content_type: application/zip
      - name: Build upload url x86_64
        id: bldurl-x86_64
        run: echo ::set-output name=url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets?name=aria2-x86_64-win.zip
      - name: Upload release asset x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.bldurl-x86_64.outputs.url }}
          asset_path: aria2/aria2-x86_64-win.zip
          asset_name: aria2-x86_64-win.zip
          asset_content_type: application/zip
  build-aria2-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build aria2 Docker image
        run: docker build -t aria2_linux -f Dockerfile.i686.x86_64.linux .
      - name: Create a container
        id: ccont
        run: echo ::set-output name=id::$(docker create aria2_linux /bin/bash)
      - name: Copy built aria2 - aria2c
        run: |
          mkdir -p aria2/i686 aria2/x86_64
          docker cp ${{steps.ccont.outputs.id}}:/i686/aria2c aria2/i686/
          docker cp ${{steps.ccont.outputs.id}}:/x86_64/aria2c aria2/x86_64/
          cd aria2
          tar Jcvf aria2-i686-linux.tar.xz i686/*
          tar Jcvf aria2-x86_64-linux.tar.xz x86_64/*
      - name: rm the container and image
        run: |
          docker rm ${{steps.ccont.outputs.id}}
          docker image rm aria2_linux
      - name: Build upload url i686
        id: bldurl-i686
        run: echo ::set-output name=url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets?name=aria2-i686-linux.tar.xz
      - name: Upload release asset i686
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.bldurl-i686.outputs.url }}
          asset_path: aria2/aria2-i686-linux.tar.xz
          asset_name: aria2-i686-linux.tar.xz
          asset_content_type: application/x-gtar
      - name: Build upload url x86_64
        id: bldurl-x86_64
        run: echo ::set-output name=url::https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets?name=aria2-x86_64-linux.tar.xz
      - name: Upload release asset x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.bldurl-x86_64.outputs.url }}
          asset_path: aria2/aria2-x86_64-linux.tar.xz
          asset_name: aria2-x86_64-linux.tar.xz
          asset_content_type: application/x-gtar